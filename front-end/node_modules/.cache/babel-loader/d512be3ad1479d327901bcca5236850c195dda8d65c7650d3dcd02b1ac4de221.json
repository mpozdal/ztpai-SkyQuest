{"ast":null,"code":"'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useUniqueId } from '../utils';\nexport var FormGroupContext = /*#__PURE__*/React.createContext({});\n\n/**\n * The `<Form.Group>` component is the easiest way to add some structure to forms.\n * @see https://rsuitejs.com/components/form/\n */\nvar FormGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'form-group' : _props$classPrefix,\n    controlIdProp = props.controlId,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"controlId\", \"className\"]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix());\n  var controlId = useUniqueId('rs-', controlIdProp);\n  var contextValue = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return /*#__PURE__*/React.createElement(FormGroupContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    role: \"group\"\n  })));\n});\nFormGroup.displayName = 'FormGroup';\nFormGroup.propTypes = {\n  controlId: PropTypes.string,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string\n};\nexport default FormGroup;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","useMemo","PropTypes","useClassNames","useUniqueId","FormGroupContext","createContext","FormGroup","forwardRef","props","ref","_props$as","as","Component","_props$classPrefix","classPrefix","controlIdProp","controlId","className","rest","_useClassNames","withClassPrefix","merge","classes","contextValue","createElement","Provider","value","role","displayName","propTypes","string"],"sources":["/Users/michalpozdal/Desktop/studia/3rok/ZTPAI/SkyQuest/front-end/node_modules/rsuite/esm/FormGroup/FormGroup.js"],"sourcesContent":["'use client';\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useUniqueId } from '../utils';\nexport var FormGroupContext = /*#__PURE__*/React.createContext({});\n\n/**\n * The `<Form.Group>` component is the easiest way to add some structure to forms.\n * @see https://rsuitejs.com/components/form/\n */\nvar FormGroup = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n    Component = _props$as === void 0 ? 'div' : _props$as,\n    _props$classPrefix = props.classPrefix,\n    classPrefix = _props$classPrefix === void 0 ? 'form-group' : _props$classPrefix,\n    controlIdProp = props.controlId,\n    className = props.className,\n    rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"controlId\", \"className\"]);\n  var _useClassNames = useClassNames(classPrefix),\n    withClassPrefix = _useClassNames.withClassPrefix,\n    merge = _useClassNames.merge;\n  var classes = merge(className, withClassPrefix());\n  var controlId = useUniqueId('rs-', controlIdProp);\n  var contextValue = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return /*#__PURE__*/React.createElement(FormGroupContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, rest, {\n    ref: ref,\n    className: classes,\n    role: \"group\"\n  })));\n});\nFormGroup.displayName = 'FormGroup';\nFormGroup.propTypes = {\n  controlId: PropTypes.string,\n  className: PropTypes.string,\n  classPrefix: PropTypes.string\n};\nexport default FormGroup;"],"mappings":"AAAA,YAAY;;AACZ,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,6BAA6B,MAAM,yDAAyD;AACnG,OAAOC,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,aAAa,EAAEC,WAAW,QAAQ,UAAU;AACrD,OAAO,IAAIC,gBAAgB,GAAG,aAAaL,KAAK,CAACM,aAAa,CAAC,CAAC,CAAC,CAAC;;AAElE;AACA;AACA;AACA;AACA,IAAIC,SAAS,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;EAClE,IAAIC,SAAS,GAAGF,KAAK,CAACG,EAAE;IACtBC,SAAS,GAAGF,SAAS,KAAK,KAAK,CAAC,GAAG,KAAK,GAAGA,SAAS;IACpDG,kBAAkB,GAAGL,KAAK,CAACM,WAAW;IACtCA,WAAW,GAAGD,kBAAkB,KAAK,KAAK,CAAC,GAAG,YAAY,GAAGA,kBAAkB;IAC/EE,aAAa,GAAGP,KAAK,CAACQ,SAAS;IAC/BC,SAAS,GAAGT,KAAK,CAACS,SAAS;IAC3BC,IAAI,GAAGpB,6BAA6B,CAACU,KAAK,EAAE,CAAC,IAAI,EAAE,aAAa,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;EAC9F,IAAIW,cAAc,GAAGjB,aAAa,CAACY,WAAW,CAAC;IAC7CM,eAAe,GAAGD,cAAc,CAACC,eAAe;IAChDC,KAAK,GAAGF,cAAc,CAACE,KAAK;EAC9B,IAAIC,OAAO,GAAGD,KAAK,CAACJ,SAAS,EAAEG,eAAe,CAAC,CAAC,CAAC;EACjD,IAAIJ,SAAS,GAAGb,WAAW,CAAC,KAAK,EAAEY,aAAa,CAAC;EACjD,IAAIQ,YAAY,GAAGvB,OAAO,CAAC,YAAY;IACrC,OAAO;MACLgB,SAAS,EAAEA;IACb,CAAC;EACH,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EACf,OAAO,aAAajB,KAAK,CAACyB,aAAa,CAACpB,gBAAgB,CAACqB,QAAQ,EAAE;IACjEC,KAAK,EAAEH;EACT,CAAC,EAAE,aAAaxB,KAAK,CAACyB,aAAa,CAACZ,SAAS,EAAEf,QAAQ,CAAC,CAAC,CAAC,EAAEqB,IAAI,EAAE;IAChET,GAAG,EAAEA,GAAG;IACRQ,SAAS,EAAEK,OAAO;IAClBK,IAAI,EAAE;EACR,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AACFrB,SAAS,CAACsB,WAAW,GAAG,WAAW;AACnCtB,SAAS,CAACuB,SAAS,GAAG;EACpBb,SAAS,EAAEf,SAAS,CAAC6B,MAAM;EAC3Bb,SAAS,EAAEhB,SAAS,CAAC6B,MAAM;EAC3BhB,WAAW,EAAEb,SAAS,CAAC6B;AACzB,CAAC;AACD,eAAexB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}