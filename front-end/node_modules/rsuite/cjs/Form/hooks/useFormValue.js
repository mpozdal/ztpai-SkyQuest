'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = useFormValue;
var _react = require("react");
var _omit = _interopRequireDefault(require("lodash/omit"));
var _utils = require("../../utils");
function useFormValue(controlledValue, formDefaultValue) {
  var _useControlled = (0, _utils.useControlled)(controlledValue, formDefaultValue),
    formValue = _useControlled[0],
    setFormValue = _useControlled[1];
  var realFormValueRef = (0, _react.useRef)(formValue);
  realFormValueRef.current = formValue;
  var onRemoveValue = (0, _react.useCallback)(function (name) {
    /**
     * when this function is called when the children component is unmount,
     * it's an old render frame so use Ref to get future value
     */
    var formValue = (0, _omit.default)(realFormValueRef.current, [name]);
    realFormValueRef.current = formValue;
    setFormValue(formValue);
    return formValue;
  }, [setFormValue]);
  return {
    formValue: formValue,
    setFormValue: setFormValue,
    onRemoveValue: onRemoveValue
  };
}