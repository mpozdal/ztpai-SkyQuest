'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
exports.__esModule = true;
exports.default = useFormError;
var _react = require("react");
var _omit = _interopRequireDefault(require("lodash/omit"));
var _utils = require("../../utils");
function useFormError(formError) {
  var _useControlled = (0, _utils.useControlled)(formError, {}),
    realFormError = _useControlled[0],
    setFormError = _useControlled[1];
  var realFormErrorRef = (0, _react.useRef)(realFormError);
  realFormErrorRef.current = realFormError;
  var onRemoveError = (0, _react.useCallback)(function (name) {
    /**
     * when this function is called when the children component is unmount,
     * it's an old render frame so use Ref to get future error
     */
    var formError = (0, _omit.default)(realFormErrorRef.current, [name]);
    realFormErrorRef.current = formError;
    setFormError(formError);
    return formError;
  }, [setFormError]);
  return {
    formError: realFormError,
    setFormError: setFormError,
    onRemoveError: onRemoveError
  };
}