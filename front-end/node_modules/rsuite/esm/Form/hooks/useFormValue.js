'use client';
import { useRef, useCallback } from 'react';
import omit from 'lodash/omit';
import { useControlled } from '../../utils';
export default function useFormValue(controlledValue, formDefaultValue) {
  var _useControlled = useControlled(controlledValue, formDefaultValue),
    formValue = _useControlled[0],
    setFormValue = _useControlled[1];
  var realFormValueRef = useRef(formValue);
  realFormValueRef.current = formValue;
  var onRemoveValue = useCallback(function (name) {
    /**
     * when this function is called when the children component is unmount,
     * it's an old render frame so use Ref to get future value
     */
    var formValue = omit(realFormValueRef.current, [name]);
    realFormValueRef.current = formValue;
    setFormValue(formValue);
    return formValue;
  }, [setFormValue]);
  return {
    formValue: formValue,
    setFormValue: setFormValue,
    onRemoveValue: onRemoveValue
  };
}